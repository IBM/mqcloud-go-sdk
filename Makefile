######################################## {COPYRIGHT-TOP} ###
# Licensed Materials - Property of IBM
#
# 5900-A0Y, 5737-H57
#
# (C) Copyright IBM Corp. 2021 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
######################################## {COPYRIGHT-END} ###
# DO NOT EDIT: Generated by https://github.ibm.com/mqoc/repo-bootstrap
APP:=$(notdir $(CURDIR))
GOPATH:=$(shell go env GOPATH)

GOHOSTOS:=$(shell go env GOHOSTOS)
GOHOSTARCH:=$(shell go env GOHOSTARCH)

GIT_COMMIT_SHA:="$(shell git rev-parse HEAD 2>/dev/null)"
GIT_REMOTE_URL:="$(shell git config --get remote.origin.url 2>/dev/null)"
BUILD_DATE:="$(shell date -u +"%Y-%m-%dT%H:%M:%SZ")"
# Jenkins vars. Set to "unknown" if the variable is not yet defined
BUILD_ID?=unknown
BUILD_NUMBER?=unknown
SHASUM_CHECK:=$(shell shasum --version >/dev/null 2>&1 && echo shasum -a 256 -c || echo sha256sum -c)
COVERPKG:=./...
TESTPKG:=./...
TESTFLAGS:=-v
SHELL:=/bin/bash

.PHONY: all deps bootstrap test coverage vet build tag-release
all: build

export GO111MODULE=on
export GOPRIVATE=*.ibm.com

ARCHIVE_EXTENSION:=.tar.gz
BINARY_EXTENSION:=
EXTRACT_COMMAND:=tar --to-stdout -zxf
# golangci-lint
# https://github.com/golangci/golangci-lint/releases/tag/v1.55.2
GOLANGCI_LINT_VERSION:=1.55.2
ifeq (${GOHOSTOS},linux)
ifeq (${GOHOSTARCH},s390x)
GOLANGCI_LINT_SHA256:=30dec9b22e7d5bb4e9d5ccea96da20f71cd7db3c8cf30b8ddc7cb9174c4d742a
else ifeq (${GOHOSTARCH},pp64le)
GOLANGCI_LINT_SHA256:=6b00f89ba5506c1de1efdd9fa17c54093013a294fefd8b9b31534db626a672ee
else
GOLANGCI_LINT_SHA256:=ca21c961a33be3bc15e4292dc40c98c8dcc5463a7b6768a3afc123761630c09c
endif
else ifeq (${GOHOSTOS},darwin)
ifeq (${GOHOSTARCH},arm64)
GOLANGCI_LINT_SHA256:=234463f059249f82045824afdcdd5db5682d0593052f58f6a3039a0a1c3899f6
else
GOLANGCI_LINT_SHA256:=632e96e6d5294fbbe7b2c410a49c8fa01c60712a0af85a567de85bcc1623ea21
endif
else
GOLANGCI_LINT_SHA256:=f57d434d231d43417dfa631587522f8c1991220b43c8ffadb9c7bd279508bf81
ARCHIVE_EXTENSION:=.zip
BINARY_EXTENSION:=.exe
EXTRACT_COMMAND:=unzip -p
endif
#

${GOPATH}/bin/golangci-lint-${GOLANGCI_LINT_VERSION}${BINARY_EXTENSION}:
	mkdir -p ${GOPATH}/bin
	wget -qO golangci-lint${ARCHIVE_EXTENSION} https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-${GOHOSTOS}-${GOHOSTARCH}${ARCHIVE_EXTENSION}
	@echo "${GOLANGCI_LINT_SHA256}  golangci-lint${ARCHIVE_EXTENSION}" | ${SHASUM_CHECK} -
	${EXTRACT_COMMAND} golangci-lint${ARCHIVE_EXTENSION} golangci-lint-${GOLANGCI_LINT_VERSION}-${GOHOSTOS}-${GOHOSTARCH}/golangci-lint${BINARY_EXTENSION} >$@
	@chmod 700 $@
	@$@ --version
	@rm -f golangci-lint${ARCHIVE_EXTENSION}

deps:
	go mod edit -json | jq -r '.Require[]?|select(((.Path|contains("golang.org/x")) or (.Path|startswith("github.ibm.com/mqoc/"))))|"\(.Path)"' | xargs go get
	go mod tidy

bootstrap:
	go install github.ibm.com/mqoc/repo-bootstrap@latest
	${GOPATH}/bin/repo-bootstrap
	$(MAKE) deps

build:
	@echo "This is a library, it doesn't need to be built"

tag-release:
	$(eval RELEASE_VERSION := $(shell cluster-bootstrap generate version))
	$(eval COMMIT_MESSAGE := $(shell git log -1 --pretty=format:"%s" | sed 's/#/\\\#/g'))
	git tag -a v$(RELEASE_VERSION) -m "$(COMMIT_MESSAGE)"
	git push origin v$(RELEASE_VERSION)
	curl -X POST -f -u mqoc:$(GITHUB_TOKEN) https://github.ibm.com/api/v3/repos/mqoc/$(APP)/releases -d '{"tag_name":"v$(RELEASE_VERSION)", "target_commitish":"master", "name": "v$(RELEASE_VERSION): $(COMMIT_MESSAGE)", "body": "$(COMMIT_MESSAGE)"}'

vet: ${GOPATH}/bin/golangci-lint-${GOLANGCI_LINT_VERSION}${BINARY_EXTENSION}
	$< run ./...

vetfix: ${GOPATH}/bin/golangci-lint-${GOLANGCI_LINT_VERSION}${BINARY_EXTENSION}
	@echo Applying available automatic fixes for vet warnings...
	$< run --fix ./...

test: vet
	@set -o pipefail && go test -coverpkg=${COVERPKG} -covermode=atomic -coverprofile=cover.out -timeout 2m ${TESTFLAGS} ${TESTPKG} 2>&1
	go tool cover -func=cover.out

coverage: cover.html
cover.html: cover.out
	go tool cover -html=cover.out -o=cover.html
